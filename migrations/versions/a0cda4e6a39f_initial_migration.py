"""initial migration

Revision ID: a0cda4e6a39f
Revises:
Create Date: 2025-01-30 11:05:48.058551

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from geoalchemy2 import Geometry

# revision identifiers, used by Alembic.
revision: str = "a0cda4e6a39f"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_geospatial_table(
        "buildings",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("osm_id", sa.Integer(), nullable=False),
        sa.Column("information", sa.JSON(), nullable=False),
        sa.Column(
            "geometry",
            Geometry(
                geometry_type="POLYGON",
                spatial_index=False,
                from_text="ST_GeomFromEWKT",
                name="geometry",
                nullable=False,
            ),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
        sa.UniqueConstraint("osm_id"),
    )
    op.create_geospatial_index(
        "idx_buildings_geometry",
        "buildings",
        ["geometry"],
        unique=False,
        postgresql_using="gist",
        postgresql_ops={},
    )
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("last_login_date", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
        sa.UniqueConstraint("username"),
    )
    op.create_geospatial_table(
        "amenities",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("osm_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("amenity_type", sa.String(), nullable=True),
        sa.Column("address", sa.String(), nullable=True),
        sa.Column("opening_hours", sa.String(), nullable=True),
        sa.Column(
            "geometry",
            Geometry(
                geometry_type="POINT",
                spatial_index=False,
                from_text="ST_GeomFromEWKT",
                name="geometry",
                nullable=False,
            ),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
        sa.UniqueConstraint("osm_id"),
    )
    op.create_geospatial_index(
        "idx_amenities_geometry",
        "amenities",
        ["geometry"],
        unique=False,
        postgresql_using="gist",
        postgresql_ops={},
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_geospatial_index(
        "idx_amenities_geometry",
        table_name="amenities",
        postgresql_using="gist",
        column_name="geometry",
    )
    op.drop_geospatial_table("amenities")
    op.drop_table("users")
    op.drop_geospatial_index(
        "idx_buildings_geometry",
        table_name="buildings",
        postgresql_using="gist",
        column_name="geometry",
    )
    op.drop_geospatial_table("buildings")
    # ### end Alembic commands ###
